<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.cyanzoy.top</id>
    <title>Sigma</title>
    <updated>2019-12-23T06:16:03.515Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.cyanzoy.top"/>
    <link rel="self" href="https://www.cyanzoy.top/atom.xml"/>
    <subtitle>为技术而生</subtitle>
    <logo>https://www.cyanzoy.top/images/avatar.png</logo>
    <icon>https://www.cyanzoy.top/favicon.ico</icon>
    <rights>All rights reserved 2019, Sigma</rights>
    <entry>
        <title type="html"><![CDATA[✍Celebrated dictum ]]></title>
        <id>https://www.cyanzoy.top/post/2fYlO0X9T</id>
        <link href="https://www.cyanzoy.top/post/2fYlO0X9T">
        </link>
        <updated>2019-12-18T04:51:11.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>我野蛮生长，没能成为自己的月亮。<br>
能遇见你<br>
是银河慷慨赠予我的糖。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🚢docker安装ce版本]]></title>
        <id>https://www.cyanzoy.top/post/46g2ELhQs</id>
        <link href="https://www.cyanzoy.top/post/46g2ELhQs">
        </link>
        <updated>2019-11-29T03:45:12.000Z</updated>
        <summary type="html"><![CDATA[<p>官网 https://docs.docker.com/v17.09/engine/installation/linux/docker-ce/centos/</p>
]]></summary>
        <content type="html"><![CDATA[<p>官网 https://docs.docker.com/v17.09/engine/installation/linux/docker-ce/centos/</p>
<!-- more -->
<h1 id="uninstall-old-versions">Uninstall old versions</h1>
<blockquote>
<p>Older versions of Docker were called docker or docker-engine. If these are installed, uninstall them, along with associated dependencies.</p>
</blockquote>
<pre><code>$ sudo yum remove docker \
                  docker-common \
                  docker-selinux \
                  docker-engine
</code></pre>
<h1 id="方法一">方法一:</h1>
<h2 id="install-using-the-repository">Install using the repository</h2>
<p><strong>SET UP THE REPOSITORY</strong></p>
<blockquote>
<p>Install required packages. yum-utils provides the yum-config-manager utility, and device-mapper-persistent-data and lvm2 are required by the devicemapper storage driver.</p>
</blockquote>
<pre><code>$ sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
</code></pre>
<blockquote>
<p>Use the following command to set up the stable repository. You always need the stable repository, even if you want to install builds from the edge or test repositories as well.</p>
</blockquote>
<pre><code>$ sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
</code></pre>
<blockquote>
<p>Optional: Enable the edge and test repositories. These repositories are included in the docker.repo file above but are disabled by default. You can enable them alongside the stable repository.</p>
</blockquote>
<pre><code>$ sudo yum-config-manager --enable docker-ce-edge
$ sudo yum-config-manager --enable docker-ce-test
</code></pre>
<blockquote>
<p>You can disable the edge or test repository by running the yum-config-manager command with the --disable flag. To re-enable it, use the --enable flag. The following command disables the edge repository.</p>
</blockquote>
<pre><code>$ sudo yum-config-manager --disable docker-ce-edge
</code></pre>
<blockquote>
<p>Note: Starting with Docker 17.06, stable releases are also pushed to the edge and test repositories.</p>
</blockquote>
<h2 id="learn-about-stable-and-edge-builds">Learn about stable and edge builds.</h2>
<p><strong>INSTALL DOCKER CE</strong></p>
<ol>
<li>Install the latest version of Docker CE, or go to the next step to install a specific version.</li>
</ol>
<pre><code>$ sudo yum install docker-ce
</code></pre>
<ol start="2">
<li>On production systems, you should install a specific version of Docker CE instead of always using the latest. List the available versions. This example uses the sort -r command to sort the results by version number, highest to lowest, and is truncated.</li>
</ol>
<pre><code>$ yum list docker-ce --showduplicates | sort -r

docker-ce.x86_64            17.09.ce-1.el7.centos             docker-ce-stable
</code></pre>
<pre><code>$ sudo yum install &lt;FULLY-QUALIFIED-PACKAGE-NAME&gt;
</code></pre>
<ol start="3">
<li>Start Docker.</li>
</ol>
<pre><code>$ sudo systemctl start docker
</code></pre>
<blockquote>
<p>Verify that docker is installed correctly by running the hello-world image.</p>
</blockquote>
<pre><code>$ sudo docker run hello-world
</code></pre>
<h1 id="方法二">方法二:</h1>
<h2 id="install-from-a-package">Install from a package</h2>
<blockquote>
<p>Go to <a href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a> and download the .rpm file for the Docker version you want to install.</p>
</blockquote>
<blockquote>
<p>Note: To install an edge package, change the word stable in the above URL to edge. Learn about stable and edge channels.</p>
</blockquote>
<blockquote>
<p>Install Docker CE, changing the path below to the path where you downloaded the Docker package.</p>
</blockquote>
<pre><code>$ sudo yum install /path/to/package.rpm
</code></pre>
<blockquote>
<p>Docker is installed but not started. The docker group is created, but no users are added to the group.</p>
</blockquote>
<p><code>Start Docker.</code></p>
<pre><code>$ sudo systemctl start docker
</code></pre>
<blockquote>
<p>Verify that docker is installed correctly by running the hello-world image.</p>
</blockquote>
<pre><code>$ sudo docker run hello-world
</code></pre>
<blockquote>
<p>This command downloads a test image and runs it in a container. When the container runs, it prints an informational message and exits.</p>
</blockquote>
<h1 id="upgrade-docker-ce">UPGRADE DOCKER CE</h1>
<blockquote>
<p>To upgrade Docker CE, download the newer package file and repeat the installation procedure, using <code>yum -y upgrade</code> instead of <code>yum -y install</code>, and pointing to the new file.</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌾Python 异步编程asyncio模块]]></title>
        <id>https://www.cyanzoy.top/post/LfH2aK5oT</id>
        <link href="https://www.cyanzoy.top/post/LfH2aK5oT">
        </link>
        <updated>2019-11-21T07:44:10.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><code>asyncio</code> 模块最大特点就是，只存在一个线程，跟 <code>JavaScript</code> 一样。<br>
由于只有一个线程，就不可能多个任务同时运行。<code>asyncio</code> 是&quot;多任务合作&quot;模式(cooperative multitasking)，允许异步任务交出执行权给其他任务，等到其他任务完成，再收回执行权继续往下执行，这跟 <code>JavaScript</code> 也是一样的。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><code>asyncio</code> 模块最大特点就是，只存在一个线程，跟 <code>JavaScript</code> 一样。<br>
由于只有一个线程，就不可能多个任务同时运行。<code>asyncio</code> 是&quot;多任务合作&quot;模式(cooperative multitasking)，允许异步任务交出执行权给其他任务，等到其他任务完成，再收回执行权继续往下执行，这跟 <code>JavaScript</code> 也是一样的。</p>
</blockquote>
<!-- more -->
<blockquote>
<p>由于代码的执行权在多个任务之间交换，所以看上去好像多个任务同时运行，其实底层只有一个线程，多个任务分享运行时间。</p>
</blockquote>
<blockquote>
<p>表面上，这是一个不合理的设计，明明有多线程多进程的能力，为什么放着多余的 <code>CPU</code> 核心不用，而只用一个线程呢？但是就像前面说的，单线程简化了很多问题，使得代码逻辑变得简单，写法符合直觉。<br>
<code>asyncio</code> 模块在单线程上启动一个事件循环(event loop)，时刻监听新进入循环的事件，加以处理，并不断重复这个过程，直到异步任务结束。事件循环的内部机制，可以参考 <code>JavaScript</code> 的模型，两者是一样的。</p>
</blockquote>
<pre><code class="language-python">#!/usr/bin/env python3
# async.py
# python3.7 及以上
import asyncio

async def count():
    print(&quot;One&quot;)
    await asyncio.sleep(1)
    print(&quot;Two&quot;)

async def main():
    await asyncio.gather(count(), count(), count())

asyncio.run(main())
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌲Savitzky-Golay 滤波器]]></title>
        <id>https://www.cyanzoy.top/post/ilNuF0noL</id>
        <link href="https://www.cyanzoy.top/post/ilNuF0noL">
        </link>
        <updated>2019-11-13T06:57:51.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌳轨迹-异常值检测(三)]]></title>
        <id>https://www.cyanzoy.top/post/YiNcentC2</id>
        <link href="https://www.cyanzoy.top/post/YiNcentC2">
        </link>
        <updated>2019-11-11T04:59:14.000Z</updated>
        <summary type="html"><![CDATA[<p>LOF(Local Outlier Factor)</p>
]]></summary>
        <content type="html"><![CDATA[<p>LOF(Local Outlier Factor)</p>
<!-- more -->
<p>参考文章:<br>
1.<a href="https://blog.csdn.net/YE1215172385/article/details/79762317">离群点检测算法——LOF(Local Outlier Factor)</a><br>
2.<a href="https://blog.csdn.net/YE1215172385/article/details/79766906">异常检测(三)——Local Outlier Factor(LOF)</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌳轨迹-异常值检测(二)]]></title>
        <id>https://www.cyanzoy.top/post/xnOx4dk3D</id>
        <link href="https://www.cyanzoy.top/post/xnOx4dk3D">
        </link>
        <updated>2019-11-11T04:58:56.000Z</updated>
        <summary type="html"><![CDATA[<p>IsolationForest</p>
]]></summary>
        <content type="html"><![CDATA[<p>IsolationForest</p>
<!-- more -->
<p>参考文章:<br>
1.<a href="https://blog.csdn.net/YE1215172385/article/details/79762317">异常检测（二）——IsolationForest</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌳轨迹-异常值检测(一)]]></title>
        <id>https://www.cyanzoy.top/post/XUaCLWFv_</id>
        <link href="https://www.cyanzoy.top/post/XUaCLWFv_">
        </link>
        <updated>2019-11-11T04:58:26.000Z</updated>
        <summary type="html"><![CDATA[<p>OneClassSVM</p>
]]></summary>
        <content type="html"><![CDATA[<p>OneClassSVM</p>
<!-- more -->
<p>参考文章:<br>
1.<a href="https://blog.csdn.net/YE1215172385/article/details/79750703">异常检测（一）——OneClassSVM</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[🌱Python的re模块中match、search、findall、finditer的区别]]></title>
        <id>https://www.cyanzoy.top/post/qMULWET8f</id>
        <link href="https://www.cyanzoy.top/post/qMULWET8f">
        </link>
        <updated>2019-11-11T01:18:16.000Z</updated>
        <summary type="html"><![CDATA[<p>温习python中的re模块</p>
]]></summary>
        <content type="html"><![CDATA[<p>温习python中的re模块</p>
<!-- more -->
<h2 id="match">match</h2>
<p>匹配<code>string</code> <strong>开头</strong>,成功返回<code>Match object</code>, 失败返回None,只匹配一个。</p>
<h2 id="search">search</h2>
<p>在<code>string</code>中进行搜索,成功返回<code>Match object</code>, 失败返回None, 只匹配一个。</p>
<h2 id="findall">findall</h2>
<p>在<code>string</code>中查找所有匹配成功的组, 即用括号括起来的部分。返回list对象，每个<code>list item</code>是由每个匹配的所有组组成的list。</p>
<h2 id="finditer">finditer</h2>
<p>在<code>string</code>中查找所有匹配成功的字符串, 返回iterator,每个item是一个Match object。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IRR]]></title>
        <id>https://www.cyanzoy.top/post/PZwpK-fkr</id>
        <link href="https://www.cyanzoy.top/post/PZwpK-fkr">
        </link>
        <updated>2019-10-25T01:33:05.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux性能测试]]></title>
        <id>https://www.cyanzoy.top/post/YQMzxqNFJ</id>
        <link href="https://www.cyanzoy.top/post/YQMzxqNFJ">
        </link>
        <updated>2019-10-15T06:32:01.000Z</updated>
        <summary type="html"><![CDATA[<p>原文链接 https://blog.ilemonrain.com/linux/LemonBench.html</p>
]]></summary>
        <content type="html"><![CDATA[<p>原文链接 https://blog.ilemonrain.com/linux/LemonBench.html</p>
<!-- more -->
<h1 id="一-lemonbench-简单介绍">一、LemonBench 简单介绍</h1>
<p>LemonBench目前涵盖了如下测试：</p>
<p>服务器基础信息 (CPU信息/内存信息/Swap信息/磁盘空间信息等)<br>
Speedtest网速测试 (本地到最近源及国内各地域不同线路的网速)<br>
磁盘测试 (4K块/1M块 直接写入测试)<br>
路由追踪测试 (追踪到国内和海外不同线路的路由信息)<br>
Spoofer测试 (获取详细网络信息，快速判断服务器接入线路)<br>
LemonBench使用起来非常简单，只需要复制粘贴再来个回车就可以轻松启动测试。</p>
<h1 id="二-lemonbench-使用方法">二、LemonBench 使用方法</h1>
<h2 id="1-快速测试">1、快速测试</h2>
<p>如果你的服务器上安装有 <code>curl</code> 工具，请使用以下命令执行脚本：</p>
<pre><code class="language-sh">curl -fsSL https://ilemonrain.com/download/shell/LemonBench.sh | bash -s fast
</code></pre>
<p>如果你的服务器上安装有 <code>wget</code> 工具，请使用以下命令执行脚本：</p>
<pre><code class="language-sh">wget -qO- https://ilemonrain.com/download/shell/LemonBench.sh | bash -s fast
</code></pre>
<h2 id="2-完整测试">2、完整测试</h2>
<p>如果你的服务器上安装有 <code>curl</code> 工具，请使用以下命令执行脚本：</p>
<pre><code class="language-shell">curl -fsSL https://ilemonrain.com/download/shell/LemonBench.sh | bash -s full
</code></pre>
<p>如果你的服务器上安装有 <code>wget</code> 工具，请使用以下命令执行脚本：</p>
<pre><code class="language-shell">wget -qO- https://ilemonrain.com/download/shell/LemonBench.sh | bash -s full
</code></pre>
]]></content>
    </entry>
</feed>