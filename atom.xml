<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://my.cyanzoy.top</id>
    <title>MAOA-L</title>
    <updated>2019-09-18T03:51:16.966Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="http://my.cyanzoy.top"/>
    <link rel="self" href="http://my.cyanzoy.top/atom.xml"/>
    <subtitle>为技术而生</subtitle>
    <logo>http://my.cyanzoy.top/images/avatar.png</logo>
    <icon>http://my.cyanzoy.top/favicon.ico</icon>
    <rights>All rights reserved 2019, MAOA-L</rights>
    <entry>
        <title type="html"><![CDATA[扣减库存]]></title>
        <id>http://my.cyanzoy.top/post/UL3LlJVMC</id>
        <link href="http://my.cyanzoy.top/post/UL3LlJVMC">
        </link>
        <updated>2019-09-18T03:24:31.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>使用CAS, <code>update table set v_1 = aa where id = xx and v_1 = old_v_1</code></p>
<blockquote>
<p>CAS ☞ compare/check and swap/set</p>
</blockquote>
<p>上面的方案,可能会出现一个CAS中经典问题. ABA的问题.</p>
<pre><code>ABA是指:
线程T1 查询,库存剩余  100
线程T2 查询,库存剩余  100
线程T1 执行subupdate t set surplus = 90 where id = x and surplus = 100;
线程T3 查询, 库存剩余 90
线程T3 执行add  update t set surplus = 100 where id = x and surplus = 90;
线程T2 执行subupdate t set surplus = 90 where id = x and surplus = 100;
</code></pre>
<p>这里线程T2执行的时候,库存的100已经不是查询到的100了<br>
一般的设计中CAS会使用version来控制.</p>
<pre><code>update t set surplus = 90 ,version = version+1 where id = x and version = oldVersion;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 笔记]]></title>
        <id>http://my.cyanzoy.top/post/git-bi-ji</id>
        <link href="http://my.cyanzoy.top/post/git-bi-ji">
        </link>
        <updated>2019-09-17T14:29:28.000Z</updated>
        <summary type="html"><![CDATA[<p>git的一些命令记录</p>
]]></summary>
        <content type="html"><![CDATA[<p>git的一些命令记录</p>
<!-- more -->
<p>🔹Git 添加远程仓库关联<br>
<code>git remote add origin git@github.com:MAOA-L/AliPayApplet.git</code><br>
<code>git push -u origin master #这句一般与上句一起用。用于远程仓库没有初始化时</code><br>
🔸Git 本地分支关联远程分支<br>
<code>git branch --set-upstream-to=origin/remote_branch your_branch</code><br>
🔹Git 删除本地分支<br>
<code>删除本地分支： git branch -d [branchname]</code><br>
🔸Git 删除远程分支<br>
<code>删除远程分支: git push origin --delete [branchname]</code></p>
<blockquote>
<p><code>Q&amp;A</code><br>
Q: git branch 不显示分支原因<br>
A: git branch要在git commit后才会显示分支.</p>
</blockquote>
]]></content>
    </entry>
</feed>